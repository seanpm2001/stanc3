  $ ../../../../../install/default/bin/stanc incomplete1.stan
Syntax error in 'incomplete1.stan', line 2, column 25 to column 30, parsing error:
   -------------------------------------------------
     1:  data {
     2:    ( array [ foo ] real , while
                                  ^
   -------------------------------------------------

Incomplete type specification, expected further types followed by ')' to complete tuple.
  $ ../../../../../install/default/bin/stanc incomplete2.stan
Syntax error in 'incomplete2.stan', line 1, column 28 to column 31, parsing error:
   -------------------------------------------------
     1:  data { ( array [ foo ] real foo
                                     ^
   -------------------------------------------------

Invalid type specification, unmatched "(".
Expected "," followed by further types and ")" to complete tuple.
  $ ../../../../../install/default/bin/stanc incomplete3.stan
Syntax error in 'incomplete3.stan', line 2, column 0 to column 0, parsing error:
   -------------------------------------------------
     1:  model { ( complex , complex ) while
         ^
   -------------------------------------------------

Expected a new identifier after comma in declaration.
All variables declared must be of the same type, and any initializing assignment must follow the identifier before the next comma.
  $ ../../../../../install/default/bin/stanc incomplete4.stan
Syntax error in 'incomplete4.stan', line 2, column 35 to column 40, parsing error:
   -------------------------------------------------
     1:  data {
     2:      ( real , ( complex , complex ) while
                                            ^
   -------------------------------------------------

Incomplete type specification. Expected either ")" or "," followed by
further types and ")" to complete tuple.
  $ ../../../../../install/default/bin/stanc incomplete5.stan
Syntax error in 'incomplete5.stan', line 1, column 9 to column 14, parsing error:
   -------------------------------------------------
     1:  data { ( while
                  ^
   -------------------------------------------------

Incomplete type declaration. Expected comma seperated list of types between "("
and ")" to declare tuple variable.
  $ ../../../../../install/default/bin/stanc incomplete6.stan
Syntax error in 'incomplete6.stan', line 2, column 25 to column 26, parsing error:
   -------------------------------------------------
     1:  transformed data {
     2:    (real, int) x = (3.5, 4;
                                  ^
   -------------------------------------------------

Ill-formed phrase. Found an expression. This can be followed by a ",", a "}", a ")", a "]", a "[" or an infix or postfix operator.
  $ ../../../../../install/default/bin/stanc incomplete7.stan
Syntax error in 'incomplete7.stan', line 2, column 15 to column 16, parsing error:
   -------------------------------------------------
     1:  functions {
     2:     (real, int, ) foo()
                        ^
     3:  }
   -------------------------------------------------

Expected comma-separated list of types followed by ")" to declare tuple return type.
  $ ../../../../../install/default/bin/stanc tuple-dataonly-ad.stan
Semantic error in 'tuple-dataonly-ad.stan', line 13, column 12 to column 19:
   -------------------------------------------------
    11:  
    12:  model {
    13:    target += foo(ps);
                     ^
    14:  }
   -------------------------------------------------

Ill-typed arguments supplied to function 'foo':
((real, real))
Available signatures:
(data (real, real)) => real
  The first argument must be data-only. (Local variables are assumed to
  depend on parameters; same goes for function inputs unless they are marked
  with the keyword 'data'.)
  $ ../../../../../install/default/bin/stanc tuple-dataonly-ad2.stan
Semantic error in 'tuple-dataonly-ad2.stan', line 17, column 12 to column 24:
   -------------------------------------------------
    15:  
    16:  model {
    17:    target += foo((x1,x2));
                     ^
    18:  }
   -------------------------------------------------

Ill-typed arguments supplied to function 'foo':
((real, real))
Available signatures:
(data (real, real)) => real
  The first argument must be data-only. (Local variables are assumed to
  depend on parameters; same goes for function inputs unless they are marked
  with the keyword 'data'.)
